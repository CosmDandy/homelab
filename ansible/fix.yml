- name: Fix Tailscale systemd service issues
  hosts: proxmox_servers
  become: yes
  tasks:
    - name: Stop tailscaled service if running
      systemd:
        name: tailscaled
        state: stopped
      failed_when: false
    - name: Load TUN module
      modprobe:
        name: tun
        state: present
    - name: Make TUN module persistent
      lineinfile:
        path: /etc/modules
        line: "tun"
        create: yes
    - name: Check current systemd service file
      command: cat /etc/systemd/system/tailscaled.service
      register: current_service
      failed_when: false
    - name: Display current service file
      debug:
        var: current_service.stdout_lines
    - name: Create proper tailscaled systemd service file
      copy:
        dest: /etc/systemd/system/tailscaled.service
        mode: '0644'
        content: |
          [Unit]
          Description=Tailscale node agent
          Documentation=https://tailscale.com/kb/
          Wants=network-pre.target
          After=network-pre.target NetworkManager.service systemd-resolved.service
          Conflicts=shutdown.target

          [Service]
          Type=notify
          Restart=on-failure
          RestartSec=5
          ExecStart=/usr/sbin/tailscaled --state=/var/lib/tailscale/tailscaled.state --socket=/run/tailscale/tailscaled.sock
          ExecStopPost=/usr/bin/tailscale down
          RuntimeDirectory=tailscale
          RuntimeDirectoryMode=0755
          StateDirectory=tailscale
          StateDirectoryMode=0700
          CacheDirectory=tailscale
          CacheDirectoryMode=0755

          [Install]
          WantedBy=multi-user.target
    - name: Create tailscale state directory
      file:
        path: /var/lib/tailscale
        state: directory
        mode: '0700'
        owner: root
        group: root
    - name: Create tailscale runtime directory
      file:
        path: /run/tailscale
        state: directory
        mode: '0755'
        owner: root
        group: root
    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
    - name: Reset failed systemd service
      command: systemctl reset-failed tailscaled
      failed_when: false
    - name: Enable and start tailscaled service
      systemd:
        name: tailscaled
        enabled: yes
        state: started
        daemon_reload: yes
    - name: Wait for service to start
      wait_for:
        timeout: 10
      delegate_to: localhost
    - name: Check service status
      command: systemctl status tailscaled --no-pager -l
      register: final_status
      failed_when: false
    - name: Display final service status
      debug:
        var: final_status.stdout_lines
    - name: Verify tailscale command works
      command: tailscale version
      register: tailscale_version
      failed_when: false
    - name: Display tailscale version
      debug:
        msg: "Tailscale version: {{ tailscale_version.stdout | default('Command failed') }}"
    - name: Connect to Tailscale network if service is running
      command: >
        tailscale up --authkey={{ tailscale_authkey | default('YOUR_AUTH_KEY') }} --hostname={{ hostvars[inventory_hostname]['tailscale_hostname'] }} --login-server={{ tailscale_login_server | default('https://vpn.cosmdandy.ru/') }} --accept-routes --accept-dns=false

      register: tailscale_up_result
      failed_when: false
      when: final_status.rc == 0
    - name: Display connection result
      debug:
        msg: |
          Connection result: {{ tailscale_up_result.stdout | default('Not attempted') }}
          {{ tailscale_up_result.stderr | default('') }}
      when: tailscale_up_result is defined
