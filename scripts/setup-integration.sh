#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Consul + Vault + Nomad
# –ó–∞–ø—É—Å–∫–∞—Ç—å –ü–û–°–õ–ï terraform apply

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%H:%M:%S')] ‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%H:%M:%S')] ‚ùå $1${NC}"
}

info() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')] ‚ÑπÔ∏è  $1${NC}"
}

echo -e "${BLUE}üè† HomeLab Integration Setup${NC}"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
check_services() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    if ! systemctl is-active --quiet consul; then
        error "Consul –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start consul"
        exit 1
    fi
    
    if ! systemctl is-active --quiet vault; then
        error "Vault –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start vault"
        exit 1
    fi
    
    if ! systemctl is-active --quiet nomad; then
        error "Nomad –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start nomad"
        exit 1
    fi
    
    log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û–∂–∏–¥–∞–Ω–∏–µ Consul
    for i in {1..30}; do
        if consul members &>/dev/null; then
            log "‚úÖ Consul –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 2
    done
    
    # –û–∂–∏–¥–∞–Ω–∏–µ Vault
    for i in {1..30}; do
        if vault status &>/dev/null; then
            log "‚úÖ Vault –æ—Ç–≤–µ—á–∞–µ—Ç"
            break
        fi
        sleep 2
    done
    
    # –û–∂–∏–¥–∞–Ω–∏–µ Nomad
    for i in {1..30}; do
        if nomad status &>/dev/null; then
            log "‚úÖ Nomad –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 2
    done
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Vault (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω)
init_vault() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Vault..."
    
    if vault status | grep -q "Initialized.*false"; then
        log "üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Vault..."
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å 1 –∫–ª—é—á–æ–º (–¥–ª—è –¥–æ–º–∞—à–Ω–µ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏)
        VAULT_INIT_OUTPUT=$(vault operator init -key-shares=1 -key-threshold=1 -format=json)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª—é—á–µ–π
        echo "$VAULT_INIT_OUTPUT" | jq -r '.unseal_keys_b64[0]' > ~/.vault-unseal-key
        echo "$VAULT_INIT_OUTPUT" | jq -r '.root_token' > ~/.vault-root-token
        
        warn "üîë Unseal –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ~/.vault-unseal-key"
        warn "üé´ Root token —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ~/.vault-root-token"
        
        # Unsealing
        vault operator unseal $(cat ~/.vault-unseal-key)
        
        log "‚úÖ Vault –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
    else
        log "‚úÖ Vault —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
        if vault status | grep -q "Sealed.*true"; then
            if [ -f ~/.vault-unseal-key ]; then
                log "üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Vault..."
                vault operator unseal $(cat ~/.vault-unseal-key)
            else
                error "Vault –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ unseal –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                exit 1
            fi
        fi
    fi
}

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Vault
auth_vault() {
    log "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Vault..."
    
    if [ -f ~/.vault-root-token ]; then
        export VAULT_TOKEN=$(cat ~/.vault-root-token)
        log "‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π root token"
    else
        error "Root token –Ω–µ –Ω–∞–π–¥–µ–Ω! Vault –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω?"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö..."
    
    sudo mkdir -p /opt/{jellyfin,homepage,atuin}/{config,data,cache}
    sudo mkdir -p /opt/data/{postgres,redis,minio}
    
    # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    sudo chown -R $USER:$USER /opt/
    sudo chmod -R 755 /opt/
    
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vault policies
setup_vault_policies() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ Vault –ø–æ–ª–∏—Ç–∏–∫..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p policies/vault
    
    # –ë–∞–∑–æ–≤–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è Nomad
    cat > policies/vault/nomad-cluster.hcl << 'EOF'
# –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è Nomad –∫–ª–∞—Å—Ç–µ—Ä–∞
path "auth/token/create/nomad-cluster" {
  capabilities = ["update"]
}

path "auth/token/revoke-accessor" {
  capabilities = ["update"]
}

path "auth/token/roles/nomad-cluster" {
  capabilities = ["read"]
}

path "kv/*" {
  capabilities = ["read"]
}

path "sys/capabilities-self" {
  capabilities = ["update"]
}
EOF

    # –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è Jellyfin
    cat > policies/vault/jellyfin.hcl << 'EOF'
# –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è Jellyfin —Å–µ—Ä–≤–∏—Å–∞
path "kv/data/homelab/domains" {
  capabilities = ["read"]
}

path "kv/data/jellyfin/*" {
  capabilities = ["read"]
}

path "kv/data/common/*" {
  capabilities = ["read"]
}
EOF

    # –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è Homepage
    cat > policies/vault/homepage.hcl << 'EOF'
# –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è Homepage —Å–µ—Ä–≤–∏—Å–∞
path "kv/data/homelab/domains" {
  capabilities = ["read"]
}

path "kv/data/homepage/*" {
  capabilities = ["read"]
}

path "kv/data/common/*" {
  capabilities = ["read"]
}
EOF

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫
    vault policy write nomad-cluster policies/vault/nomad-cluster.hcl
    vault policy write jellyfin policies/vault/jellyfin.hcl
    vault policy write homepage policies/vault/homepage.hcl
    
    log "‚úÖ Vault –ø–æ–ª–∏—Ç–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nomad –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Vault
setup_nomad_vault_integration() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Nomad —Å Vault..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏ –¥–ª—è Nomad
    vault write auth/token/roles/nomad-cluster \
        allowed_policies="nomad-cluster" \
        explicit_max_ttl=0 \
        name="nomad-cluster" \
        orphan=true \
        period=259200 \
        renewable=true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Nomad
    NOMAD_VAULT_TOKEN=$(vault write -field=token auth/token/create/nomad-cluster)
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Nomad
    echo "$NOMAD_VAULT_TOKEN" | sudo tee /etc/nomad.d/vault-token >/dev/null
    sudo chmod 600 /etc/nomad.d/vault-token
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nomad
    if ! grep -q "token" /etc/nomad.d/config.hcl; then
        sudo bash -c 'cat >> /etc/nomad.d/config.hcl << EOF

vault {
  enabled = true
  address = "http://127.0.0.1:8200"
  token   = "'"$NOMAD_VAULT_TOKEN"'"
}
EOF'
    fi
    
    log "‚úÖ Nomad –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å Vault"
}

# –í–∫–ª—é—á–µ–Ω–∏–µ KV –¥–≤–∏–∂–∫–∞ –≤ Vault
enable_kv_engine() {
    log "–í–∫–ª—é—á–µ–Ω–∏–µ KV –¥–≤–∏–∂–∫–∞ –≤ Vault..."
    
    if ! vault secrets list | grep -q "kv/"; then
        vault secrets enable -path=kv kv-v2
        log "‚úÖ KV –¥–≤–∏–∂–æ–∫ –≤–∫–ª—é—á–µ–Ω"
    else
        log "‚úÖ KV –¥–≤–∏–∂–æ–∫ —É–∂–µ –≤–∫–ª—é—á–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤
create_base_secrets() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤..."
    
    # –î–æ–º–µ–Ω—ã
    vault kv put kv/homelab/domains \
        jellyfin="jellyfin.cosmdandy.ru" \
        homepage="homepage.cosmdandy.ru" \
        base="cosmdandy.ru"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ
    vault kv put kv/homelab/owner \
        name="CosmDandy" \
        email="admin@cosmdandy.ru" \
        contact="telegram:@cosmdandy"
    
    # Jellyfin —Å–µ–∫—Ä–µ—Ç—ã
    vault kv put kv/jellyfin/config \
        api_key="$(openssl rand -hex 32)" \
        admin_password="$(openssl rand -base64 16)"
    
    # Homepage —Å–µ–∫—Ä–µ—Ç—ã
    vault kv put kv/homepage/config \
        allowed_hosts="homepage.cosmdandy.ru"
    
    log "‚úÖ –ë–∞–∑–æ–≤—ã–µ —Å–µ–∫—Ä–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Consul KV
setup_consul_kv() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Consul KV..."
    
    # –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    consul kv put homelab/datacenter "homelab"
    consul kv put homelab/environment "production"
    
    # Jellyfin –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    consul kv put jellyfin/ports/http "8096"
    consul kv put jellyfin/resources/cpu "4000"
    consul kv put jellyfin/resources/memory "2048"
    consul kv put jellyfin/features/dlna "true"
    consul kv put jellyfin/logging/level "Information"
    
    # Homepage –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    consul kv put homepage/port "3000"
    consul kv put homepage/resources/cpu "500"
    consul kv put homepage/resources/memory "512"
    
    log "‚úÖ Consul KV –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
restart_services() {
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    sudo systemctl restart nomad
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Nomad
    sleep 10
    
    if nomad status &>/dev/null; then
        log "‚úÖ Nomad –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤"
    else
        error "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º Nomad"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
verify_integration() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Nomad + Vault
    if nomad status | grep -q "ready"; then
        log "‚úÖ Nomad –≥–æ—Ç–æ–≤"
    else
        warn "‚ö†Ô∏è  Nomad –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ–∫—Ä–µ—Ç–∞–º
    if vault kv get kv/homelab/domains &>/dev/null; then
        log "‚úÖ –î–æ—Å—Ç—É–ø –∫ —Å–µ–∫—Ä–µ—Ç–∞–º —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–µ–∫—Ä–µ—Ç–∞–º"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Consul KV
    if consul kv get homelab/datacenter &>/dev/null; then
        log "‚úÖ Consul KV —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Consul KV"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ HomeLab"
    
    # check_services
    # wait_for_services
    init_vault
    auth_vault
    create_directories
    enable_kv_engine
    setup_vault_policies
    setup_nomad_vault_integration
    create_base_secrets
    setup_consul_kv
    restart_services
    verify_integration
    
    echo
    log "üéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo
    info "üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:"
    echo "  1. Vault UI: http://localhost:8200"
    echo "  2. Consul UI: http://localhost:8500"
    echo "  3. Nomad UI: http://localhost:4646"
    echo "  4. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤: nomad run nomad/jellyfin.nomad.hcl"
    echo
    warn "üîë –í–∞–∂–Ω–æ: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª—ã ~/.vault-unseal-key –∏ ~/.vault-root-token!"
}

# –ó–∞–ø—É—Å–∫
main "$@"
